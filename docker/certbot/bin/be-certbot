#!/bin/sh
admin_email='admin@bookingexperts.nl'
webroot='/usr/share/nginx/html'
nginx_dir=/mnt/nginx
le_dir=/mnt/letsencrypt

if [ ! -z ${STAGING} ]; then
  staging="--staging"
fi

function main() {
  case $1 in
    renew|'')
      renew
      ;;
    setup)
      setup
      ;;
    add)
      add $2
      ;;
    help|*)
      usage
      ;;
  esac
}

function usage() {
  echo "Usage: $0 [renew|setup]"
  echo "       $0 add domain"
  echo "Default command: renew"
}

function setup() {
  echo "Creating directories..."
  mkdir -p $nginx_dir $le_dir
  if confirm "(Re)generate DH params?"; then
    openssl dhparam -out ${nginx_dir}/dhparams.pem 2048
  fi
  if confirm "Register new LetsEncrypt account?"; then
    certbot register ${staging} --agree-tos --no-eff-email -m $admin_email
  fi
}

function renew() {
  certbot renew ${staging} --post-hook="touch ${nginx_dir}/updated"
}


function add() {
  domain=$1
  config_file="${nginx_dir}/${domain}.conf"

  if [ ! -f $config_file ]; then
    case $domain in
      www.*)
        naked_domain=$(echo $domain | sed -e 's/www\.//g')
        ;;
    esac

    request_certificate $(strip_commas "${domain},${naked_domain}") \
    && generate_nginx_config $domain "${naked_domain}" \
    && validate_config \
    && touch ${nginx_dir}/updated \
    && sleep 5 \
    || die "ERROR: Failed to add domain for ${domain}"
  fi
}

function request_certificate() {
  certbot certonly ${staging} --webroot --webroot-path $webroot --rsa-key-size 4096 --non-interactive --expand --keep-until-expiring --domains $1
}

function generate_nginx_config() {
  domain=$1
  naked_domain=$2
  config_file="${nginx_dir}/${domain}.conf"

  eval "echo \"$(cat /etc/nginx/vhost.conf.template)\"" > $config_file
  if [ "${naked_domain}" != '' ]; then
    eval "echo \"$(cat /etc/nginx/www-redir.conf.template)\"" >> $config_file
  fi
}

function validate_config() {
  nginx -t -c /etc/nginx/nginx.test-conf
}

function confirm() {
  echo -n "$@ "
  read answer
  for response in y Y yes YES Yes Sure sure SURE OK ok Ok
  do
    if [ "_$answer" == "_$response" ]
    then
      return 0
    fi
  done

  # Any answer other than the list above is considerred a "no" answer
  return 1
}

strip_commas() {
 echo $1 | sed -e 's/^,*//g' | sed -e 's/,*$//g'
}

function die() {
  echo $1
  exit 1
}
main "$@"
