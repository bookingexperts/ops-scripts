load_module               /usr/lib/nginx/modules/ndk_http_module.so;
load_module               /usr/lib/nginx/modules/ngx_http_lua_module.so;
user                      root;
worker_processes          2;
pid                       /var/run/nginx.pid;
events {}
http {
  include                 /etc/nginx/mime.types;
  default_type            application/octet-stream;
  access_log              /dev/stdout;
  error_log               /dev/stderr warn;
  server_tokens           off;
  ignore_invalid_headers  on;
  set_real_ip_from        10.0.0.0/8;
  real_ip_header          proxy_protocol;

  server {
    listen 80 default_server proxy_protocol http2;
    root /usr/share/nginx/html;

    location /.well-known/certbot/add {
      allow 52.58.32.36;
      deny all;

      content_by_lua_block {
        local args, _ = ngx.req.get_uri_args()
        local domains = args['domain']
        if type(domains) == 'table' then
          domains = table.concat(domains, ' ')
        end

        if not domains or domains == '' then
          ngx.status = ngx.HTTP_NOT_ACCEPTABLE
        elseif os.execute('/usr/local/bin/be-certbot add ' .. domains) == 0 then
          ngx.status = ngx.HTTP_CREATED
        else
          ngx.status = ngx.HTTP_INTERNAL_SERVER_ERROR
        end
      }
    }

    # Pass acme-challenge to the certbot
    location /.well-known/acme-challenge {
    }

    # Redirect all else to https
    location / {
      access_log off;
      return 301 https://$host$request_uri;
    }
  }
}
