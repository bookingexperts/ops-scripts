load_module               /usr/lib/nginx/modules/ndk_http_module.so;
load_module               /usr/lib/nginx/modules/ngx_http_lua_module.so;
user                      root;
worker_processes          2;
pid                       /var/run/nginx.pid;
daemon                    off;
events {}
http {
  include                 /etc/nginx/mime.types;
  default_type            application/octet-stream;
  access_log              /dev/stdout;
  error_log               /dev/stdout warn;
  server_tokens           off;
  ignore_invalid_headers  on;
  set_real_ip_from        10.0.0.0/8;
  real_ip_header          proxy_protocol;

  server {
    listen 80 proxy_protocol default_server;
    root /usr/share/nginx/html;

    # Pass acme-challenge to the certbot
    location /.well-known/acme-challenge {
    }

    location = /.well-known/certbot {
      content_by_lua_block {
        local domain = ngx.var.host

        if not domain or domain == '' then
          ngx.status = ngx.HTTP_NOT_ACCEPTABLE
        else
          # os.execute returns a waitpid status (?) that seems to be 256 times the exit code
          local code = os.execute('/usr/local/bin/be-certbot add ' .. domain) / 256
          if code == 0 then
            ngx.status = 200
            ngx.say("Certificate requested & installed")
          elseif code == 9 then
            ngx.status = 409
            ngx.say("Certificate requested, not installed. Configuration invalid.")
          elseif code == 12 then
            ngx.status = 412
            ngx.say("DNS check failed. Giving up.")
          else
            ngx.status = ngx.HTTP_INTERNAL_SERVER_ERROR
            ngx.say("Failed to request certificate. Exit code " .. code)
          end
        end
      }
    }

    location / {
      access_log      off;
      log_not_found   off;

      # Redirect to https
      return 301 https://$host$request_uri;
    }
  }
}
